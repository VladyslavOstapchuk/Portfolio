# created a new django project
django-admin startproject blog
# renamed main folder to blog_project

# created two apps
python3 manage.py startapp blog_app
python3 manage.py startapp portfolio_app

# added two new apps to the settings.py in blog folder

# blog/settings.py
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'blog_app',
    'portfolio_app',
]

# check if everything works fine
python3 manage.py runserver

# create a database class in models.py from folder portfolio_app

# Description of database table
class Project(models.Model):
    # title contains max 100 symbols
    title = models.CharField(max_length=100)
    # short description
    description = models.CharField(max_length=250)
    # upload_to contains folder where images will be uploaded
    image = models.ImageField(upload_to='portfolio_app/images/')
    # url to 
    url = models.URLField(blank=True)

# migrate changes in models.py 
python3 manage.py migrate

# ensure that changes in models.py are saved

# make migration
python3 manage.py makemigrations 

# migrate changes in models.py 
python3 manage.py migrate

# Migrations need to be performed every time models.py is modified or created

# Create super user for admin page
python3 manage.py createsuperuser

# Add created models to admin.py in portfolio_app folder

from django.contrib import admin
#
from .models import Project

# Register your models here.
admin.site.register(Project)

# Login to admins page with created user credentials and create a new project

# Add to settings.py path to folder where images will be stored. Don't forget to import os module

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'

# path to images stored to project database
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

#
MEDIA_URL = 'media/'


# Add to urls.py static urls

from django.contrib import admin
from django.urls import path
# imported for static urls
from django.conf.urls.static import static 
from django.conf import settings

urlpatterns = [
    path('admin/', admin.site.urls),
]

urlpatterns += static(settings.MEDIA_URL, document_root = settings.MEDIA_ROOT)

# After all these manipulations know we are able to open image stored to project database in browser

# Add new view for the home page

# views.py
from django.shortcuts import render

# Create your views here.
def home(req):
    # Path should not contain template folder name
    return render(req, 'portfolio/home.html')

# urls.py
from django.contrib import admin
from django.urls import path
# imported for static urls
from django.conf.urls.static import static 
from django.conf import settings
from portfolio_app import views

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', views.home, name='home'),
]

urlpatterns += static(settings.MEDIA_URL, document_root = settings.MEDIA_ROOT)

# Create a new template named home.html in newly created folder templates/portfolio in your app folder
<h1>My portfolio</h1>

# Import database to views.py
from django.shortcuts import render
from .models import Project

# Create your views here.
def home(req):
    # Import of all data from DB
    projects = Project.objects.all()

    return render(
    # Request
    req,
    # Path to html page template. Path should not contain template folder name
    'portfolio/home.html', {
    # Passing DB objects to the html template
    'projects':projects})

# Test if imported DB works with the template

<h1>My portfolio</h1>

{{ project }}

# Make home.html list database records

<h1>My portfolio</h1>

<!--django for loop for templates-->
{% for project in projects %}

<!--get title field value for every DB record -->
<h2>{{ project.title }}</h2>
<p>{{ project.description }}</p>
<img src = "{{ project.image.url }}">
{% if project.url%}
<br><a href="{{ project.url}}">Link</a>
{% endif%}
{% endfor %}

# Modify ulrs.py in blog folder

from django.contrib import admin
from django.urls import path, include
# imported for static urls
from django.conf.urls.static import static 
from django.conf import settings
from portfolio_app import views

# Links to pages
urlpatterns = [
    path('admin/', admin.site.urls),
    path('', views.home, name='home'),
    path('blog/', include('blog_app.urls')),
]

urlpatterns += static(settings.MEDIA_URL, document_root = settings.MEDIA_ROOT)

# Create a new urls.py file for blog_app and add some configuration

from django.urls import path
from . import views

# Links to pages
urlpatterns = [
    path('', views.all_blogs, name='all_blogs'),
]

# Create a new template and add it to views.py py of blog_app

from django.shortcuts import render

# Create your views here.
def all_blogs(req):
    # Template must be created
    return render(req, 'blog/all_blogs.html')

# Create a model for Blog and make it visible from admins page. Also create all_blogs template and show last 5 publications

Create in portfolio_app folder static/portfolio and add there a photo 
Then add this photo to template home.html

<h1>My portfolio</h1>
{% load static %}

<img src="{% static 'portfolio/LOGO-PJWSTK.png' %}">
<!--django for loop for templates-->
{% for project in projects %}

<!--get title field value for every DB record -->
<h2>{{ project.title }}</h2>
<p>{{ project.description }}</p>
<img src = "{{ project.image.url }}">
{% if project.url%}
<br><a href="{{ project.url}}">Link</a>
{% endif%}
{% endfor %}

# Modify urls.py of blog_app aplication

# Links to pages
urlpatterns = [
    path('', views.all_blogs, name='all_blogs'),
    # Allows to create unique links to every blog post
    path('<int:blog_id>/', views.detail, name='detail'),
]

# Also change views.py file for this application

from django.shortcuts import render, get_object_or_404
from .models import Blog

# Create your views here.

def all_blogs(req):
    # List of all objects
    # blogs = Blog.objects.all()
    # Ordered by publication date. The last 5 publications
    blogs = Blog.objects.order_by('-date')[:5]
    return render(req, 'blog/all_blogs.html', {'blogs':blogs})

def detail(req, blog_id):
    blog = get_object_or_404(Blog, pk=blog_id)
    return render(req, 'blog/detail.html', {'blog':blog})

# Lets add name of application to the view and all_blogs

from django.urls import path
from . import views

app_name = 'blog'

# Links to pages
urlpatterns = [
    path('', views.all_blogs, name='all_blogs'),
    # Allows to create unique links to every blog post
    path('<int:blog_id>/', views.detail, name='detail'),
]


{% for blog in blogs %}

<a href="{% url 'blog:detail' blog.id%}"><h2>{{ blog.title }}</h2></a>
<h5>{{ blog.date }}</h5>
<p>{{ blog.description }}</p>
{% endfor %}

# Blog name will identify which application we are using

# Add link to blogs page in home.html

<a href="{% url 'blog:all_blogs' %}">Blog</a>
<br>

# Remove bound for all_blogs in views.py of blog_app

def all_blogs(req):
    # List of all objects
    # blogs = Blog.objects.all()
    # Ordered by publication date. The last 5 publications
    # blogs = Blog.objects.order_by('-date')[:5]
    blogs = Blog.objects.order_by('-date')
    return render(req, 'blog/all_blogs.html', {'blogs':blogs})

# Add plural form for all_blogs.html

<h2>This blog contains {{ blogs.count }} post{{ blogs.count|pluralize}}</h2>

# Add some details to templates

# detail.html
<h1>{{ blog.title }}</h2>

<h2>--{{ blog.date|date:'F jS Y' }}--</h2>

{{ blog.description|safe }}

# all_blogs.html
<h2>This blog contains {{ blogs.count }} post{{ blogs.count|pluralize}}</h2>

{% for blog in blogs %}

<a href="{% url 'blog:detail' blog.id%}"><h2>{{ blog.title }}</h2></a>
<!--Changes data format-->
<h5>{{ blog.date| date:'M d Y' }}</h5>
<!--Shows only 100 first characters and allows to use html in text-->
<p>{{ blog.description|safe|truncatechars:100 }}</p>
<!-- Don't show html tags -->
<!-- <p>{{ blog.description|striptags|truncatechars:100 }}</p> -->

{% endfor %}

# Show blog title in admins page. Change models.py
from django.db import models

# Create your models here.

# Description of database table

class Project(models.Model):
    # title contains max 100 symbols
    title = models.CharField(max_length=100)
    # short description
    description = models.CharField(max_length=250)
    # upload_to contains folder where images will be uploaded
    image = models.ImageField(upload_to='portfolio_app/images/')
    # url to 
    url = models.URLField(blank=True)

    # Change __str__ method
    def __str__(self) -> str:
        return self.title

    # Add some Bootstrap elements to home and all_blogs page

    # Create a base.html template in templates folder of portfolio_app
    # Copy all code from home.html to base.html and delete all code not related to Bootstrap